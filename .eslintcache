[{"/home/omena/dev/barber-appointment/front/src/index.tsx":"1","/home/omena/dev/barber-appointment/front/src/styles/global.ts":"2","/home/omena/dev/barber-appointment/front/src/hooks/index.tsx":"3","/home/omena/dev/barber-appointment/front/src/hooks/useAuth/index.tsx":"4","/home/omena/dev/barber-appointment/front/src/hooks/useToast/useToast.tsx":"5","/home/omena/dev/barber-appointment/front/src/pages/Signin/index.tsx":"6","/home/omena/dev/barber-appointment/front/src/hooks/useToast/index.tsx":"7","/home/omena/dev/barber-appointment/front/src/components/ToastContainer/components/Toast/Toast.styles.tsx":"8","/home/omena/dev/barber-appointment/front/src/components/ToastContainer/ToastContainer.tsx":"9","/home/omena/dev/barber-appointment/front/src/ReactotronConfig.tsx":"10","/home/omena/dev/barber-appointment/front/src/components/ToastContainer/components/Toast/Toast.tsx":"11"},{"size":507,"mtime":1610059250700,"results":"12","hashOfConfig":"13"},{"size":461,"mtime":1608745110900,"results":"14","hashOfConfig":"13"},{"size":250,"mtime":1610832873480,"results":"15","hashOfConfig":"13"},{"size":51,"mtime":1610832873480,"results":"16","hashOfConfig":"13"},{"size":1243,"mtime":1610875931440,"results":"17","hashOfConfig":"13"},{"size":2141,"mtime":1610834315260,"results":"18","hashOfConfig":"13"},{"size":54,"mtime":1610832873480,"results":"19","hashOfConfig":"13"},{"size":1188,"mtime":1610875490450,"results":"20","hashOfConfig":"13"},{"size":444,"mtime":1610876687480,"results":"21","hashOfConfig":"13"},{"size":151,"mtime":1609581495740,"results":"22","hashOfConfig":"13"},{"size":928,"mtime":1610876989430,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tl41bh",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/omena/dev/barber-appointment/front/src/index.tsx",[],"/home/omena/dev/barber-appointment/front/src/styles/global.ts",[],"/home/omena/dev/barber-appointment/front/src/hooks/index.tsx",[],"/home/omena/dev/barber-appointment/front/src/hooks/useAuth/index.tsx",[],"/home/omena/dev/barber-appointment/front/src/hooks/useToast/useToast.tsx",["47"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport ToastContainer from 'components/ToastContainer';\nimport { ToastContextData, ToastMessage } from './useToast.interface';\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      console.log('addToast');\n      const id = Math.random().toString();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages([...messages, toast]);\n    },\n    [messages]\n  );\n  const removeToast = useCallback((id: string) => {\n    setMessages(messages.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) throw new Error('useToast need a Context');\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","/home/omena/dev/barber-appointment/front/src/pages/Signin/index.tsx",[],"/home/omena/dev/barber-appointment/front/src/hooks/useToast/index.tsx",[],"/home/omena/dev/barber-appointment/front/src/components/ToastContainer/components/Toast/Toast.styles.tsx",[],"/home/omena/dev/barber-appointment/front/src/components/ToastContainer/ToastContainer.tsx",[],"/home/omena/dev/barber-appointment/front/src/ReactotronConfig.tsx",[],"/home/omena/dev/barber-appointment/front/src/components/ToastContainer/components/Toast/Toast.tsx",[],{"ruleId":"48","severity":1,"message":"49","line":12,"column":7,"nodeType":"50","messageId":"51","endLine":12,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected"]